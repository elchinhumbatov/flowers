{"version":3,"sources":["components/Roadmap/Roadmap.jsx","pages/Delivery/Delivery.module.css","../node_modules/@material-ui/core/esm/internal/svg-icons/MoreHoriz.js","../node_modules/@material-ui/core/esm/Breadcrumbs/BreadcrumbCollapsed.js","../node_modules/@material-ui/core/esm/Breadcrumbs/Breadcrumbs.js","pages/Delivery/DeliveryOptions.jsx","pages/Delivery/PaymentOptions.jsx","pages/Delivery/Delivery.jsx"],"names":["Roadmap","data","className","links","map","link","idx","color","to","url","text","last","module","exports","createSvgIcon","React","d","withStyles","theme","root","display","marginLeft","spacing","marginRight","backgroundColor","palette","grey","borderRadius","cursor","boxShadow","shadows","emphasize","icon","width","height","name","props","classes","other","_objectWithoutProperties","ButtonBase","_extends","component","focusRipple","MoreHorizIcon","Breadcrumbs","ref","children","_props$component","Component","_props$expandText","expandText","_props$itemsAfterColl","itemsAfterCollapse","_props$itemsBeforeCol","itemsBeforeCollapse","_props$maxItems","maxItems","_props$separator","separator","_React$useState","expanded","setExpanded","allItems","toArray","filter","child","index","li","key","concat","Typography","clsx","ol","items","reduce","acc","current","length","push","insertSeparators","_toConsumableArray","slice","BreadcrumbCollapsed","onClick","event","focusable","currentTarget","parentNode","querySelector","focus","renderItemsBeforeAndAfter","flexWrap","alignItems","padding","margin","listStyle","userSelect","DeliveryOptions","s","options","courier","pickup","PaymentOptions","payments","useSelector","state","deliveryPage","paymentMethods","item","payment","src","require","img","default","alt","id","Delivery","pathname","useLocation","delivery","roadmap","optionsWrap","paymentsWrap"],"mappings":"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","file":"static/js/12.1d61e80d.chunk.js","sourcesContent":["import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\nimport { Link } from \"react-router-dom\";\nimport \"./Roadmap.css\";\n\nfunction Roadmap({data}) {\n  return (\n    <Breadcrumbs aria-label=\"breadcrumb\" className=\"breadcrumb\">\n      {\n        data.links.map((link, idx) => {\n          return <Link key={idx} color=\"inherit\" to={link.url}>{link.text}</Link>\n        })\n      }\n      <Typography color=\"textPrimary\">{data.last}</Typography>\n    </Breadcrumbs>\n  );\n}\n\nexport default Roadmap;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"optionsWrap\":\"Delivery_optionsWrap__NcPSi\",\"options\":\"Delivery_options__2EsKl\",\"paymentsWrap\":\"Delivery_paymentsWrap__oUNGi\",\"payments\":\"Delivery_payments__3yReh\",\"payment\":\"Delivery_payment__1XzlE\"};","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreHoriz');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '../styles/withStyles';\nimport { emphasize } from '../styles/colorManipulator';\nimport MoreHorizIcon from '../internal/svg-icons/MoreHoriz';\nimport ButtonBase from '../ButtonBase';\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      display: 'flex',\n      marginLeft: theme.spacing(0.5),\n      marginRight: theme.spacing(0.5),\n      backgroundColor: theme.palette.grey[100],\n      color: theme.palette.grey[700],\n      borderRadius: 2,\n      cursor: 'pointer',\n      '&:hover, &:focus': {\n        backgroundColor: theme.palette.grey[200]\n      },\n      '&:active': {\n        boxShadow: theme.shadows[0],\n        backgroundColor: emphasize(theme.palette.grey[200], 0.12)\n      }\n    },\n    icon: {\n      width: 24,\n      height: 16\n    }\n  };\n};\n/**\n * @ignore - internal component.\n */\n\n\nfunction BreadcrumbCollapsed(props) {\n  var classes = props.classes,\n      other = _objectWithoutProperties(props, [\"classes\"]);\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    component: \"li\",\n    className: classes.root,\n    focusRipple: true\n  }, other), /*#__PURE__*/React.createElement(MoreHorizIcon, {\n    className: classes.icon\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? BreadcrumbCollapsed.propTypes = {\n  /**\n   * @ignore\n   */\n  classes: PropTypes.object.isRequired\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateBreadcrumbCollapsed'\n})(BreadcrumbCollapsed);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport BreadcrumbCollapsed from './BreadcrumbCollapsed';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the ol element. */\n  ol: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    alignItems: 'center',\n    padding: 0,\n    margin: 0,\n    listStyle: 'none'\n  },\n\n  /* Styles applied to the li element. */\n  li: {},\n\n  /* Styles applied to the separator element. */\n  separator: {\n    display: 'flex',\n    userSelect: 'none',\n    marginLeft: 8,\n    marginRight: 8\n  }\n};\n\nfunction insertSeparators(items, className, separator) {\n  return items.reduce(function (acc, current, index) {\n    if (index < items.length - 1) {\n      acc = acc.concat(current, /*#__PURE__*/React.createElement(\"li\", {\n        \"aria-hidden\": true,\n        key: \"separator-\".concat(index),\n        className: className\n      }, separator));\n    } else {\n      acc.push(current);\n    }\n\n    return acc;\n  }, []);\n}\n\nvar Breadcrumbs = /*#__PURE__*/React.forwardRef(function Breadcrumbs(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'nav' : _props$component,\n      _props$expandText = props.expandText,\n      expandText = _props$expandText === void 0 ? 'Show path' : _props$expandText,\n      _props$itemsAfterColl = props.itemsAfterCollapse,\n      itemsAfterCollapse = _props$itemsAfterColl === void 0 ? 1 : _props$itemsAfterColl,\n      _props$itemsBeforeCol = props.itemsBeforeCollapse,\n      itemsBeforeCollapse = _props$itemsBeforeCol === void 0 ? 1 : _props$itemsBeforeCol,\n      _props$maxItems = props.maxItems,\n      maxItems = _props$maxItems === void 0 ? 8 : _props$maxItems,\n      _props$separator = props.separator,\n      separator = _props$separator === void 0 ? '/' : _props$separator,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"expandText\", \"itemsAfterCollapse\", \"itemsBeforeCollapse\", \"maxItems\", \"separator\"]);\n\n  var _React$useState = React.useState(false),\n      expanded = _React$useState[0],\n      setExpanded = _React$useState[1];\n\n  var renderItemsBeforeAndAfter = function renderItemsBeforeAndAfter(allItems) {\n    var handleClickExpand = function handleClickExpand(event) {\n      setExpanded(true); // The clicked element received the focus but gets removed from the DOM.\n      // Let's keep the focus in the component after expanding.\n\n      var focusable = event.currentTarget.parentNode.querySelector('a[href],button,[tabindex]');\n\n      if (focusable) {\n        focusable.focus();\n      }\n    }; // This defends against someone passing weird input, to ensure that if all\n    // items would be shown anyway, we just show all items without the EllipsisItem\n\n\n    if (itemsBeforeCollapse + itemsAfterCollapse >= allItems.length) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error(['Material-UI: You have provided an invalid combination of props to the Breadcrumbs.', \"itemsAfterCollapse={\".concat(itemsAfterCollapse, \"} + itemsBeforeCollapse={\").concat(itemsBeforeCollapse, \"} >= maxItems={\").concat(maxItems, \"}\")].join('\\n'));\n      }\n\n      return allItems;\n    }\n\n    return [].concat(_toConsumableArray(allItems.slice(0, itemsBeforeCollapse)), [/*#__PURE__*/React.createElement(BreadcrumbCollapsed, {\n      \"aria-label\": expandText,\n      key: \"ellipsis\",\n      onClick: handleClickExpand\n    })], _toConsumableArray(allItems.slice(allItems.length - itemsAfterCollapse, allItems.length)));\n  };\n\n  var allItems = React.Children.toArray(children).filter(function (child) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: The Breadcrumbs component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return /*#__PURE__*/React.isValidElement(child);\n  }).map(function (child, index) {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      className: classes.li,\n      key: \"child-\".concat(index)\n    }, child);\n  });\n  return /*#__PURE__*/React.createElement(Typography, _extends({\n    ref: ref,\n    component: Component,\n    color: \"textSecondary\",\n    className: clsx(classes.root, className)\n  }, other), /*#__PURE__*/React.createElement(\"ol\", {\n    className: classes.ol\n  }, insertSeparators(expanded || maxItems && allItems.length <= maxItems ? allItems : renderItemsBeforeAndAfter(allItems), classes.separator, separator)));\n});\nprocess.env.NODE_ENV !== \"production\" ? Breadcrumbs.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The breadcrumb children.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Override the default label for the expand button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  expandText: PropTypes.string,\n\n  /**\n   * If max items is exceeded, the number of items to show after the ellipsis.\n   */\n  itemsAfterCollapse: PropTypes.number,\n\n  /**\n   * If max items is exceeded, the number of items to show before the ellipsis.\n   */\n  itemsBeforeCollapse: PropTypes.number,\n\n  /**\n   * Specifies the maximum number of breadcrumbs to display. When there are more\n   * than the maximum number, only the first `itemsBeforeCollapse` and last `itemsAfterCollapse`\n   * will be shown, with an ellipsis in between.\n   */\n  maxItems: PropTypes.number,\n\n  /**\n   * Custom separator node.\n   */\n  separator: PropTypes.node\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiBreadcrumbs'\n})(Breadcrumbs);","import React from 'react'\nimport s from \"./Delivery.module.css\";\n\nfunction DeliveryOptions() {\n  return (\n    <div className={s.options}>\n      <div className={s.courier}>\n        <h6>Курьер до двери</h6>\n        <p><span></span>Доставка по Москве осуществляется бесплатно в пределах МКАД.</p>\n        <p><span></span>Доставка по Москве осуществляется бесплатно в пределах МКАД.</p>\n        <p><span></span>Доставка по Москве осуществляется бесплатно в пределах МКАД.</p>\n        <p><span></span>Доставка по Москве осуществляется бесплатно в пределах МКАД.</p>\n      </div>\n      <div className={s.pickup}>\n        <h6>Самовызов</h6>\n        <p><span></span>г. Москва, Можайское шоссе, д. 41,к.1.</p>\n        <p><span></span>г. Москва, м. Фили, Новозаводская улица, д. 2, к.1.</p>\n        <p><span></span>г. Москва, ул. Новый Арбат, 3, стр. 1,</p>\n        <p><span></span>Для выдачи заказа Вам нужно приехать в магазин</p>\n        <p><span></span>Назвать свою ФИО и номер заказа</p>\n      </div>\n    </div>\n  )\n}\n\nexport default DeliveryOptions\n","import React from \"react\";\nimport s from \"./Delivery.module.css\";\nimport { useSelector } from \"react-redux\";\n\nfunction PaymentOptions() {\n  const payments = useSelector((state) => state.deliveryPage.paymentMethods);\n  return (\n    <div className={s.payments}>\n      {payments.map((item) => {\n        return (\n          <div className={s.payment} key={item.id}>\n            <img\n              src={require(`../../assets/images/icons/${item.img}.png`).default}\n              alt=\"logo\"\n            />\n            <p>{item.text}</p>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default PaymentOptions;\n","import React from \"react\";\nimport s from \"./Delivery.module.css\";\nimport Roadmap from \"../../components/Roadmap/Roadmap\";\nimport { useLocation } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport DeliveryOptions from \"./DeliveryOptions\";\nimport PaymentOptions from './PaymentOptions';\n\nfunction Delivery() {\n  const { pathname } = useLocation();\n  const lastLink = useSelector((state) => state.roadmap[pathname]);\n  const delivery = {\n    last: lastLink,\n    links: [{ url: \"/\", text: \"Flower place\" }],\n  };\n  return (\n    <section className=\"graybg\">\n      <div className=\"container-outter\">\n        <Roadmap data={delivery} />\n        <div className=\"title\">\n          <h3>Доставка и оплата </h3>\n          <p>Заказы принимаются круглые сутки</p>\n        </div>\n      </div>\n      <section className=\"whitebg\">\n        <div className=\"container\">\n          <div className={s.optionsWrap}>\n            <h5>Варианты доставки</h5>\n            <DeliveryOptions />\n          </div>\n        </div>\n      </section>\n      <div className=\"container\">\n        <div className={s.paymentsWrap}>\n          <h5>Возможности оплаты</h5>\n          <PaymentOptions />\n        </div>\n      </div>\n    </section>\n  );\n}\n\nexport default Delivery;\n"],"sourceRoot":""}